# provide the information for the folder structure. Should be identical to DAS when at NIOZ
Project.year<- '2019'       # what was the year the project/experiment started?
Project.name<- 'ABCDom'     # A project is basically also an experiment, if you do have multiple experiments within one project, please use use sub.experiment
# Every project has a name!, probably also an acronym "If you don't have an acronym for your experiment you don't have an experiment!" - Dr. Craig Nelson, 2018
Owner.initials <- 'MGIA'    # Who's adventure is it? is it yours or is it someone else's (collaborator) aka. who will probably be first author?
Author<- 'Wesley Sparagon and Milou G.I. Arts'  # Who are you? who is doing this analysis?
# sub.experiment.name<- 'MZmine_settings_Jun19' # this is optional, if you have multiple experiments, or multiple MZmine outputs from different settings, using this option will create a folder within your Project folder
# path where to store the data, new folders will be created based on the information provided above.
main.data.path <- normalizePath(file.path("..") )#if used it will create a Projects folder in the github folder, otherwise define a file path here ('C:/Users/Name/Documents/DATA')
Data.cleanup.scripts <- normalizePath(file.path("..", "DataCleanup", "Scripts"))
# path where to store the data, new folders will be created based on the information provided above.
main.data.path <- c("..") )#if used it will create a Projects folder in the github folder, otherwise define a file path here ('C:/Users/Name/Documents/DATA')
# path where to store the data, new folders will be created based on the information provided above.
main.data.path <- c("..") #if used it will create a Projects folder in the github folder, otherwise define a file path here ('C:/Users/Name/Documents/DATA')
Data.cleanup.scripts <- paste0("..", "DataCleanup", "Scripts")
Project.starter.scripts <- normalizePath(file.path(".","Scripts")
Project.starter.scripts <- normalizePath(file.path(".","Scripts"))
Project.starter.scripts <- normalizePath(file.path(".","Scripts"))
Data.cleanup.scripts <- file.path("..", "DataCleanup", "Scripts")
Project.starter.scripts <- file.path(".","Scripts"))
# path where to store the data, new folders will be created based on the information provided above.
main.data.path <- file.path("..") #if used it will create a Projects folder in the github folder, otherwise define a file path here ('C:/Users/Name/Documents/DATA')
Project.starter.scripts <- file.path(".","Scripts")
file.path(Project.starter.scripts,'create_directory.R')
normalizePath(file.path(main.data.path, 'Projects')
)
file.path(main.data.path, 'Projects')
# provide the information for the folder structure. Should be identical to DAS when at NIOZ
Project.year<- '2019'       # what was the year the project/experiment started?
Project.name<- 'ABCDom'     # A project is basically also an experiment, if you do have multiple experiments within one project, please use use sub.experiment
# Every project has a name!, probably also an acronym "If you don't have an acronym for your experiment you don't have an experiment!" - Dr. Craig Nelson, 2018
Owner.initials <- 'MGIA'    # Who's adventure is it? is it yours or is it someone else's (collaborator) aka. who will probably be first author?
Author<- 'Wesley Sparagon and Milou G.I. Arts'  # Who are you? who is doing this analysis?
# sub.experiment.name<- 'MZmine_settings_Jun19' # this is optional, if you have multiple experiments, or multiple MZmine outputs from different settings, using this option will create a folder within your Project folder
# path where to store the data, new folders will be created based on the information provided above.
main.data.path <- file.path("..") #if used it will create a Projects folder in the github folder, otherwise define a file path here ('C:/Users/Name/Documents/DATA')
Data.cleanup.scripts <- file.path("..", "DataCleanup", "Scripts")
Project.starter.scripts <- file.path(".","Scripts")
#################################################################
####               END OF USER DEFINED INPUT                 ####
#################################################################
#### Data management
#Create directory for the experiment if it doesnt exist already
# also creates objects with directory used in other scripts
source(file.path(Project.starter.scripts,'create_directory.R'))
# within this folder we are creating sub folders.
# check if  the directory already exists, otherwise create new
# also creates objects with directory used in other scripts
source(file.path(Project.starter.scripts,'create_datafolders.R'))
file.path()
data.path
Project.year<- '2019'       # what was the year the project/experiment started?
Project.name<- 'ABCDom'     # A project is basically also an experiment, if you do have multiple experiments within one project, please use use sub.experiment
# Every project has a name!, probably also an acronym "If you don't have an acronym for your experiment you don't have an experiment!" - Dr. Craig Nelson, 2018
Owner.initials <- 'MGIA'    # Who's adventure is it? is it yours or is it someone else's (collaborator) aka. who will probably be first author?
Author<- 'Wesley Sparagon and Milou G.I. Arts'  # Who are you? who is doing this analysis?
# sub.experiment.name<- 'MZmine_settings_Jun19' # this is optional, if you have multiple experiments, or multiple MZmine outputs from different settings, using this option will create a folder within your Project folder
# path where to store the data, new folders will be created based on the information provided above.
main.data.path <- file.path("..") #if used it will create a Projects folder in the github folder, otherwise define a file path here ('C:/Users/Name/Documents/DATA')
Data.cleanup.scripts <- file.path("..", "DataCleanup", "Scripts")
Project.starter.scripts <- file.path(".","Scripts")
ifelse(!dir.exists(file.path(main.data.path, 'Projects')), dir.create(file.path(main.data.path, 'Projects')), FALSE)
data.path <- normalizePath(file.path(main.data.path, 'Projects'))
# Owner initials. check if directory exist, otherwise create new
ifelse(!dir.exists(file.path(data.path, Owner.initials)), dir.create(file.path(data.path, Owner.initials)), FALSE)
# add owner initals to string
data.path <- file.path(data.path, Owner.initials)
# Project year. check if directory exist, otherwise create new
ifelse(!dir.exists(file.path(data.path, Project.year)), dir.create(file.path(data.path, Project.year)), FALSE)
# add Project year to string for data path
data.path <- file.path(data.path, Project.year)
# Project name. check if folder exist, otherwise create new
ifelse(!dir.exists(file.path(data.path, Project.name)), dir.create(file.path(data.path, Project.name)), FALSE)
# add Project.name to string for data path
data.path <- file.path(data.path, Project.name)
# Experiment name. check if directory to safe files exist, otherwise create new
if(exists("sub.experiment.name")){
ifelse(!dir.exists(file.path(data.path, sub.experiment.name)), dir.create(file.path(data.path, sub.experiment.name)), FALSE)
# add Experiment name to string for data path
data.path <- file.path(data.path, sub.experiment.name)
}
data.path <- file.path(main.data.path, 'Projects')
# Owner initials. check if directory exist, otherwise create new
ifelse(!dir.exists(file.path(data.path, Owner.initials)), dir.create(file.path(data.path, Owner.initials)), FALSE)
# add owner initials to string
data.path <- file.path(data.path, Owner.initials)
# Project year. check if directory exist, otherwise create new
ifelse(!dir.exists(file.path(data.path, Project.year)), dir.create(file.path(data.path, Project.year)), FALSE)
# add Project year to string for data path
data.path <- file.path(data.path, Project.year)
# Project name. check if folder exist, otherwise create new
ifelse(!dir.exists(file.path(data.path, Project.name)), dir.create(file.path(data.path, Project.name)), FALSE)
# add Project.name to string for data path
data.path <- file.path(data.path, Project.name)
# Experiment name. check if directory to safe files exist, otherwise create new
if(exists("sub.experiment.name")){
ifelse(!dir.exists(file.path(data.path, sub.experiment.name)), dir.create(file.path(data.path, sub.experiment.name)), FALSE)
# add Experiment name to string for data path
data.path <- file.path(data.path, sub.experiment.name)
}
wd(dirOriginal)
set_wd(dirOriginal)
setwd(dirOriginal)
# R directory, this will be the working directory, environment etc.
ifelse(!dir.exists(file.path(data.path, 'R')), dir.create(file.path(data.path, 'R')), FALSE)
dirR<-file.path("..", 'R')
# RAWdata directory, read only folder!
ifelse(!dir.exists(file.path(data.path, 'RAWdata')), dir.create(file.path(data.path, 'RAWdata')), FALSE)
dirRAW<-file.path("..", 'RAWdata')
# Output directory, here you will find your processed datasets, logs, simulation outputs and other processed things
ifelse(!dir.exists(file.path(data.path, 'output')), dir.create(file.path(data.path, 'output')), FALSE)
dirOutput<-file.path("..", 'output')
# Figure directory, here you will find your made figures. only generated files.
ifelse(!dir.exists(file.path(data.path, 'figures')), dir.create(file.path(data.path, 'figures')), FALSE)
dirFigs<-file.path("..", 'figures')
# Document directory, directory that contains the paper,
ifelse(!dir.exists(file.path(data.path, 'doc')), dir.create(file.path(data.path, 'doc')), FALSE)
dirDoc<-file.path("..", 'doc')
# Cytoscape directory, directory that contains the cytoscape data,
ifelse(!dir.exists(file.path(data.path, 'Cytoscape')), dir.create(file.path(data.path, 'Cytoscape')), FALSE)
dirCyto<-file.path("..", 'Cytoscape')
# Within the Cytoscape directory, directory that contains the normal network,
ifelse(!dir.exists(file.path(dirCyto, 'Analogs_on')), dir.create(file.path(dirCyto, 'Analogs_on')), FALSE)
normalizePath(file.path(dirCyto, 'Analogs_on'))
# Within the Cytoscape directory, directory that contains the normal network,
ifelse(!dir.exists(file.path(data.path, 'Cytoscape', 'Analogs_on')), dir.create(file.path(data.path, 'Cytoscape', 'Analogs_on')), FALSE)
dir_analogs_on<-file.path("..", 'Cytoscape', 'Analogs_on')
# Within the Cytoscape directory, directory that contains the normal network,
ifelse(!dir.exists(file.path(data.path, 'Cytoscape',  'MolNetEnhancer')), dir.create(file.path(data.path, 'Cytoscape', 'MolNetEnhancer')), FALSE)
dir_correlation<-file.path("..", 'Cytoscape', 'MolNetEnhancer')
ifelse(!dir.exists(file.path(data.path, 'output', 'write_read')), dir.create(file.path(data.path, 'output', 'write_read')), FALSE)
dirWrite<-file.path("..", 'output', 'write_read')
create_rproj <- function(project){
rproj <- file.path(dirOriginal, 'Scripts','rproj')
file.copy(rproj, paste0(project, '.Rproj'))
}
wd.project<-getwd()
setwd(dirR)
setwd(data.path)
setwd(dirR)
getwd
getwd()
setwd(file.path(data.path, "R"))
file.path(data.path, "R")
setwd(data.path)
getwd()
setwd("./R")
getwd()
ifelse(exists("sub.experiment.name"), create_rproj(paste0(Project.name, "_", sub.experiment.name)), create_rproj(Project.name))
setwd(wd.project)
create_gitignore<-function(){
gitign <- file.path(dirOriginal, 'Scripts', '.gitignore')
file.copy (gitign, ".gitignore" )
}
wd.project<-getwd()
setwd(data.path)
create_gitignore()
setwd(wd.project)
#remove objects not needed and save
rm(create_rproj)
rm(dirOriginal)
wd.project<-getwd()
setwd(dirR)
getwd()
setwd(data.path)
setwd("./R")
save.image()
setwd(wd.project)
# provide the information for the folder structure. Should be identical to DAS when at NIOZ
Project.year<- '2018'       # what was the year the project/experiment started?
Project.name<- 'MCSMAC'     # A project is basically also an experiment, if you do have multiple experiments within one project, please use use sub.experiment
# Every project has a name!, probably also an acronym "If you don't have an acronym for your experiment you don't have an experiment!" - Dr. Craig Nelson, 2018
Owner.initials <- 'MGIA'    # Who's adventure is it? is it yours or is it someone else's (collaborator) aka. who will probably be first author?
Author<- 'Milou G.I. Arts'  # Who are you? who is doing this analysis?
# sub.experiment.name<- 'MZmine_settings_Jun19' # this is optional, if you have multiple experiments, or multiple MZmine outputs from different settings, using this option will create a folder within your Project folder
# path where to store the data, new folders will be created based on the information provided above.
main.data.path <- file.path("..") #if used it will create a Projects folder in the github folder, otherwise define a file path here ('C:/Users/Name/Documents/DATA')
Data.cleanup.scripts <- file.path("..", "DataCleanup", "Scripts")
Project.starter.scripts <- file.path(".","Scripts")
#################################################################
####               END OF USER DEFINED INPUT                 ####
#################################################################
#### Data management
#Create directory for the experiment if it doesnt exist already
# also creates objects with directory used in other scripts
source(file.path(Project.starter.scripts,'create_directory.R'))
# within this folder we are creating sub folders.
# check if  the directory already exists, otherwise create new
# also creates objects with directory used in other scripts
source(file.path(Project.starter.scripts,'create_datafolders.R'))
Project.year<- '2018'       # what was the year the project/experiment started?
Project.name<- 'MCSMAC'     # A project is basically also an experiment, if you do have multiple experiments within one project, please use use sub.experiment
# Every project has a name!, probably also an acronym "If you don't have an acronym for your experiment you don't have an experiment!" - Dr. Craig Nelson, 2018
Owner.initials <- 'MGIA'    # Who's adventure is it? is it yours or is it someone else's (collaborator) aka. who will probably be first author?
Author<- 'Milou G.I. Arts'  # Who are you? who is doing this analysis?
# sub.experiment.name<- 'MZmine_settings_Jun19' # this is optional, if you have multiple experiments, or multiple MZmine outputs from different settings, using this option will create a folder within your Project folder
# path where to store the data, new folders will be created based on the information provided above.
main.data.path <- file.path("..") #if used it will create a Projects folder in the github folder, otherwise define a file path here ('C:/Users/Name/Documents/DATA')
Data.cleanup.scripts <- file.path( "..", "..","..","..", "..", "DataCleanup", "Scripts")
Data.cleanup.folder <- file.path( "..", "..","..","..", "..", "DataCleanup")
Project.starter.scripts <- file.path(".","Scripts")
#################################################################
####               END OF USER DEFINED INPUT                 ####
#################################################################
#### Data management
#Create directory for the experiment if it doesnt exist already
# also creates objects with directory used in other scripts
source(file.path(Project.starter.scripts,'create_directory.R'))
# within this folder we are creating sub folders.
# check if  the directory already exists, otherwise create new
# also creates objects with directory used in other scripts
source(file.path(Project.starter.scripts,'create_datafolders.R'))
#if this is the first time running this, create a new project (in existing directory)
#and save this in the created R folder
Project.year<- '2018'       # what was the year the project/experiment started?
Project.name<- 'MCSMAC'     # A project is basically also an experiment, if you do have multiple experiments within one project, please use use sub.experiment
# Every project has a name!, probably also an acronym "If you don't have an acronym for your experiment you don't have an experiment!" - Dr. Craig Nelson, 2018
Owner.initials <- 'MGIA'    # Who's adventure is it? is it yours or is it someone else's (collaborator) aka. who will probably be first author?
Author<- 'Milou G.I. Arts'  # Who are you? who is doing this analysis?
# sub.experiment.name<- 'MZmine_settings_Jun19' # this is optional, if you have multiple experiments, or multiple MZmine outputs from different settings, using this option will create a folder within your Project folder
# path where to store the data, new folders will be created based on the information provided above.
main.data.path <- file.path("..") #if used it will create a Projects folder in the github folder, otherwise define a file path here ('C:/Users/Name/Documents/DATA')
Data.cleanup.scripts <- file.path( "..", "..","..","..", "..", "DataCleanup", "Scripts")
Data.cleanup.folder <- file.path( "..", "..","..","..", "..", "DataCleanup")
Project.starter.scripts <- file.path(".","Scripts")
#Create directory for the experiment if it doesnt exist already
# also creates objects with directory used in other scripts
source(file.path(Project.starter.scripts,'create_directory.R'))
# within this folder we are creating sub folders.
# check if  the directory already exists, otherwise create new
# also creates objects with directory used in other scripts
source(file.path(Project.starter.scripts,'create_datafolders.R'))
#if this is the first time running this, create a new project (in existing directory)
#and save this in the created R folder
# provide the information for the folder structure. Should be identical to DAS when at NIOZ
Project.year<- '2018'       # what was the year the project/experiment started?
Project.name<- 'MCSMAC'     # A project is basically also an experiment, if you do have multiple experiments within one project, please use use sub.experiment
# Every project has a name!, probably also an acronym "If you don't have an acronym for your experiment you don't have an experiment!" - Dr. Craig Nelson, 2018
Owner.initials <- 'MGIA'    # Who's adventure is it? is it yours or is it someone else's (collaborator) aka. who will probably be first author?
Author<- 'Milou G.I. Arts'  # Who are you? who is doing this analysis?
# path where to store the data, new folders will be created based on the information provided above.
main.data.path <- file.path("..") #if used it will create a Projects folder in the github folder, otherwise define a file path here ('C:/Users/Name/Documents/DATA')
Project.year<- '2018'       # what was the year the project/experiment started?
Project.name<- 'MCSMAC'     # A project is basically also an experiment, if you do have multiple experiments within one project, please use use sub.experiment
# Every project has a name!, probably also an acronym "If you don't have an acronym for your experiment you don't have an experiment!" - Dr. Craig Nelson, 2018
Owner.initials <- 'MGIA'    # Who's adventure is it? is it yours or is it someone else's (collaborator) aka. who will probably be first author?
Author<- 'Milou G.I. Arts'  # Who are you? who is doing this analysis?
# sub.experiment.name<- 'MZmine_settings_Jun19' # this is optional, if you have multiple experiments, or multiple MZmine outputs from different settings, using this option will create a folder within your Project folder
# path where to store the data, new folders will be created based on the information provided above.
main.data.path <- file.path("..") #if used it will create a Projects folder in the github folder, otherwise define a file path here ('C:/Users/Name/Documents/DATA')
Data.cleanup.scripts <- file.path( "..", "..","..","..", "..", "DataCleanup", "Scripts")
Data.cleanup.folder <- file.path( "..", "..","..","..", "..", "DataCleanup")
Project.starter.scripts <- file.path(".","Scripts")
#################################################################
####               END OF USER DEFINED INPUT                 ####
#################################################################
#### Data management
#Create directory for the experiment if it doesnt exist already
# also creates objects with directory used in other scripts
source(file.path(Project.starter.scripts,'create_directory.R'))
# within this folder we are creating sub folders.
# check if  the directory already exists, otherwise create new
# also creates objects with directory used in other scripts
source(file.path(Project.starter.scripts,'create_datafolders.R'))
